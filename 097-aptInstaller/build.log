===============================================================
+++ dirname ./build-app.sh
++ cd .
++ pwd
+ cd /home/rodolfoap/git/cbox/097-aptInstaller
+ . VERSION
++ VERSION=1.0.0
+ rm -rf build
+ mkdir -p build
+ pushd build
+ '[' -f Makefile ']'
+ cmake .. -Wdev -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release
-- The C compiler identification is GNU 8.3.0
-- The CXX compiler identification is GNU 8.3.0
-- Check for working C compiler: /bin/cc
-- Check for working C compiler: /bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /bin/c++
-- Check for working CXX compiler: /bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
Library VERSION is: 1.0.0
-- Configuring done
-- Generating done
-- Build files have been written to: /home/rodolfoap/git/cbox/097-aptInstaller/build
++ nproc
+ make -j12
Scanning dependencies of target helloworld_lib
[ 16%] Building CXX object lib/CMakeFiles/helloworld_lib.dir/helloworld_lib.cpp.o
[ 33%] Linking CXX shared library libhelloworld.so
[ 33%] Built target helloworld_lib
Scanning dependencies of target helloworld_test
Scanning dependencies of target helloworld_bin
[ 66%] Building CXX object test/CMakeFiles/helloworld_test.dir/helloworld_test.cpp.o
[ 66%] Building CXX object src/CMakeFiles/helloworld_bin.dir/helloworld.cpp.o
[100%] Linking CXX executable helloworld_test
[100%] Linking CXX executable helloworld
[100%] Built target helloworld_test
[100%] Built target helloworld_bin
+ ctest --verbose
UpdateCTestConfiguration  from :/home/rodolfoap/git/cbox/097-aptInstaller/build/DartConfiguration.tcl
UpdateCTestConfiguration  from :/home/rodolfoap/git/cbox/097-aptInstaller/build/DartConfiguration.tcl
Test project /home/rodolfoap/git/cbox/097-aptInstaller/build
Constructing a list of tests
Done constructing a list of tests
Updating test list for fixtures
Added 0 tests to meet fixture requirements
Checking test dependency graph...
Checking test dependency graph end
test 1
    Start 1: test_helloworld

1: Test command: /home/rodolfoap/git/cbox/097-aptInstaller/build/test/helloworld_test
1: Test timeout computed to be: 10000000
1: Hello, World!
1/1 Test #1: test_helloworld ..................   Passed    0.00 sec

100% tests passed, 0 tests failed out of 1

Total Test time (real) =   0.00 sec
+ cpack
CPack: Create package using DEB
CPack: Install projects
CPack: - Run preinstall target for: helloworld
CPack: - Install project: helloworld []
CPack: Create package
CPack: - package: /home/rodolfoap/git/cbox/097-aptInstaller/build/helloworld-1.0.0-linux.deb generated.
+ dpkg -I helloworld-1.0.0-linux.deb
 new Debian package, version 2.0.
 size 7436 bytes: control archive=493 bytes.
     210 bytes,    10 lines      control              
     440 bytes,     6 lines      md5sums              
 Architecture: amd64
 Depends: libc6 (>=2.4)
 Description: Helloworld library-dependent app
 Maintainer: rodolfoap@gmail.com
 Package: helloworld
 Priority: optional
 Section: devel
 Version: 1.0.0
 Installed-Size: 66
 
+ dpkg -c helloworld-1.0.0-linux.deb
drwxr-xr-x root/root         0 2021-04-11 11:59 ./usr/
drwxr-xr-x root/root         0 2021-04-11 11:59 ./usr/bin/
-rwxr-xr-x root/root     16672 2021-04-11 11:59 ./usr/bin/helloworld
drwxr-xr-x root/root         0 2021-04-11 11:59 ./usr/include/
-rw-r--r-- root/root        56 2021-04-11 07:45 ./usr/include/helloworld.hpp
drwxr-xr-x root/root         0 2021-04-11 11:59 ./usr/lib/
-rw-r--r-- root/root     16800 2021-04-11 11:59 ./usr/lib/libhelloworld.so
drwxr-xr-x root/root         0 2021-04-11 11:59 ./usr/local/
drwxr-xr-x root/root         0 2021-04-11 11:59 ./usr/local/cmake/
drwxr-xr-x root/root         0 2021-04-11 11:59 ./usr/local/cmake/helloworld/
-rw-r--r-- root/root       896 2021-04-11 11:59 ./usr/local/cmake/helloworld/helloworldConfig-release.cmake
-rw-r--r-- root/root      2879 2021-04-11 11:59 ./usr/local/cmake/helloworld/helloworldConfig.cmake
-rw-r--r-- root/root      1380 2021-04-11 11:59 ./usr/local/cmake/helloworld/helloworldConfigVersion.cmake
+ popd
===============================================================
+ docker build --build-arg VERSION -t helloworld:1.0.0 .
Sending build context to Docker daemon  530.4kB
Step 1/11 : FROM debian:10.9-slim as builder
 ---> 48e774d3c4f5
Step 2/11 : RUN DEBIAN_FRONTEND=noninteractive apt update
 ---> Using cache
 ---> 8b53cbef08dc
Step 3/11 : RUN DEBIAN_FRONTEND=noninteractive apt -y install build-essential cmake
 ---> Using cache
 ---> 8171e755a657
Step 4/11 : COPY . /app/
 ---> f4d38eab8dcd
Step 5/11 : RUN /app/build-app.sh
 ---> Running in 3a98eebcd5e0
[91m+++ dirname /app/build-app.sh
[0m[91m++ cd /app
[0m[91m++ pwd
[0m[91m+ cd /app
+ . VERSION
[0m[91m++ VERSION=1.0.0
[0m[91m+ rm -rf build
[0m[91m+ mkdir -p build
[0m[91m+ pushd build
[0m[91m+ '[' -f Makefile ']'
+ cmake .. -Wdev -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release
[0m-- The C compiler identification is GNU 8.3.0
-- The CXX compiler identification is GNU 8.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
[91mLibrary VERSION is: 1.0.0
[0m-- Configuring done
-- Generating done
-- Build files have been written to: /app/build
[91m++ nproc
[0m[91m+ make -j12
[0mScanning dependencies of target helloworld_lib
[ 16%] Building CXX object lib/CMakeFiles/helloworld_lib.dir/helloworld_lib.cpp.o
[ 33%] Linking CXX shared library libhelloworld.so
[ 33%] Built target helloworld_lib
Scanning dependencies of target helloworld_test
Scanning dependencies of target helloworld_bin
[ 66%] Building CXX object src/CMakeFiles/helloworld_bin.dir/helloworld.cpp.o
[ 66%] Building CXX object test/CMakeFiles/helloworld_test.dir/helloworld_test.cpp.o
[100%] Linking CXX executable helloworld
[100%] Linking CXX executable helloworld_test
[100%] Built target helloworld_test
[100%] Built target helloworld_bin
[91m+ ctest --verbose
[0mUpdateCTestConfiguration  from :/app/build/DartConfiguration.tcl
UpdateCTestConfiguration  from :/app/build/DartConfiguration.tcl
Test project /app/build
Constructing a list of tests
Done constructing a list of tests
Updating test list for fixtures
Added 0 tests to meet fixture requirements
Checking test dependency graph...
Checking test dependency graph end
test 1
    Start 1: test_helloworld

1: Test command: /app/build/test/helloworld_test
1: Test timeout computed to be: 10000000
1: Hello, World!
1/1 Test #1: test_helloworld ..................   Passed    0.00 sec

100% tests passed, 0 tests failed out of 1

Total Test time (real) =   0.00 sec
[91m+ cpack
[0mCPack: Create package using DEB
CPack: Install projects
CPack: - Run preinstall target for: helloworld
CPack: - Install project: helloworld
CPack: Create package
CPack: - package: /app/build/helloworld-1.0.0-linux.deb generated.
[91m+ dpkg -I helloworld-1.0.0-linux.deb
[0m new Debian package, version 2.0.
 size 7398 bytes: control archive=496 bytes.
     210 bytes,    10 lines      control              
     440 bytes,     6 lines      md5sums              
 Architecture: amd64
 Depends: libc6 (>=2.4)
 Description: Helloworld library-dependent app
 Maintainer: rodolfoap@gmail.com
 Package: helloworld
 Priority: optional
 Section: devel
 Version: 1.0.0
 Installed-Size: 66
 
[91m+ dpkg -c helloworld-1.0.0-linux.deb
[0mdrwxr-xr-x root/root         0 2021-04-11 09:59 ./usr/
drwxr-xr-x root/root         0 2021-04-11 09:59 ./usr/bin/
-rwxr-xr-x root/root     16672 2021-04-11 09:59 ./usr/bin/helloworld
drwxr-xr-x root/root         0 2021-04-11 09:59 ./usr/include/
-rw-r--r-- root/root        56 2021-04-11 05:45 ./usr/include/helloworld.hpp
drwxr-xr-x root/root         0 2021-04-11 09:59 ./usr/lib/
-rw-r--r-- root/root     16800 2021-04-11 09:59 ./usr/lib/libhelloworld.so
drwxr-xr-x root/root         0 2021-04-11 09:59 ./usr/local/
drwxr-xr-x root/root         0 2021-04-11 09:59 ./usr/local/cmake/
drwxr-xr-x root/root         0 2021-04-11 09:59 ./usr/local/cmake/helloworld/
-rw-r--r-- root/root       896 2021-04-11 09:59 ./usr/local/cmake/helloworld/helloworldConfig-release.cmake
-rw-r--r-- root/root      2879 2021-04-11 09:59 ./usr/local/cmake/helloworld/helloworldConfig.cmake
-rw-r--r-- root/root      1267 2021-04-11 09:59 ./usr/local/cmake/helloworld/helloworldConfigVersion.cmake
[91m+ popd
[0mRemoving intermediate container 3a98eebcd5e0
 ---> 3803c11e82b5
Step 6/11 : FROM debian:10.9-slim
 ---> 48e774d3c4f5
Step 7/11 : MAINTAINER RodolfoAP <rodolfoap@gmail.com>
 ---> Using cache
 ---> df13ed00803d
Step 8/11 : CMD /usr/bin/helloworld
 ---> Using cache
 ---> f89626ba7537
Step 9/11 : COPY --from=builder /app/build/helloworld-*-linux.deb /tmp
 ---> 0eacb6b7d2f1
Step 10/11 : RUN dpkg -i /tmp/helloworld-*-linux.deb
 ---> Running in 51e5703dd082
Selecting previously unselected package helloworld.
(Reading database ... 6460 files and directories currently installed.)
Preparing to unpack .../tmp/helloworld-1.0.0-linux.deb ...
Unpacking helloworld (1.0.0) ...
Setting up helloworld (1.0.0) ...
Removing intermediate container 51e5703dd082
 ---> 4a7c1a49a86e
Step 11/11 : RUN rm -f   /tmp/helloworld-*-linux.deb
 ---> Running in 860fe53e22ba
Removing intermediate container 860fe53e22ba
 ---> e582b6d98d16
[Warning] One or more build-args [VERSION] were not consumed
Successfully built e582b6d98d16
Successfully tagged helloworld:1.0.0
===============================================================
+ docker run -ti --rm helloworld:1.0.0 dpkg -L helloworld
+ sed 's/^/\t/'
	/usr
	/usr/bin
	/usr/bin/helloworld
	/usr/include
	/usr/include/helloworld.hpp
	/usr/lib
	/usr/lib/libhelloworld.so
	/usr/local
	/usr/local/cmake
	/usr/local/cmake/helloworld
	/usr/local/cmake/helloworld/helloworldConfig-release.cmake
	/usr/local/cmake/helloworld/helloworldConfig.cmake
	/usr/local/cmake/helloworld/helloworldConfigVersion.cmake
+ docker run -ti --rm helloworld:1.0.0 apt-cache show helloworld
+ sed 's/^/\t/'
	Package: helloworld
	Status: install ok installed
	Priority: optional
	Section: devel
	Installed-Size: 66
	Maintainer: rodolfoap@gmail.com
	Architecture: amd64
	Version: 1.0.0
	Depends: libc6 (>= 2.4)
	Description: Helloworld library-dependent app
	Description-md5: fae1fa3039678450bdeeb3ed9f7fe58c
	
+ docker run -ti --rm helloworld:1.0.0 helloworld
+ sed 's/^/\t/'
	Hello, World!
===============================================================
Recreating 097-aptinstaller_helloworld_1 ... 
[1A[2KRecreating 097-aptinstaller_helloworld_1 ... [32mdone[0m[1BAttaching to 097-aptinstaller_helloworld_1
[36mhelloworld_1  |[0m Hello, World!
[36m097-aptinstaller_helloworld_1 exited with code 0
[0m===============================================================
